GInterface = GInterface or {}GInterface.Definitions = {}GInterface.Providers = {}function GInterface.CreateDefinition (name)	local definition = GInterface.InterfaceDefinition (name)	GInterface.Definitions [name] = definition	return definitionendfunction GInterface.CreateInterface (interface, provider, ...)	local providers = GInterface.Providers [interface]	if not providers then		return	end	if not provider then		for k, _ in pairs (providers) do			provider = k			break		end	end	local info = providers [provider]	if not info then		return	end	return info:CreateInterface (...)endfunction GInterface.CreateInterfaceProvider (interface, name)	local provider = GInterface.InterfaceProvider (interface, name)	local info = GInterface.InterfaceProviderInfo (interface, name, provider)	GInterface.Providers [interface] = GInterface.Providers [interface] or {}	GInterface.Providers [interface] [name] = info	return provider, infoendfunction GInterface.GetInterfaceDefinition (name)	return GInterface.Definitions [name]endfunction GInterface.MakeConstructor (metatable)	metatable.__index = metatable	return function (...)		local object = {}		setmetatable (object, metatable)		if object.ctor then			object:ctor (...)		end		return object	endendinclude ("ginterface/interfacedefinition.lua")include ("ginterface/interfaceprovider.lua")include ("ginterface/interfaceproviderinfo.lua")local AddCSLuaFile = SERVER and AddCSLuaFile or function () endfor _, v in ipairs (file.FindInLua ("ginterface/definitions/*.lua")) do	include ("ginterface/definitions/" .. v)	AddCSLuaFile ("ginterface/definitions/" .. v)endfor _, v in ipairs (file.FindInLua ("ginterface/providers/*.lua")) do	include ("ginterface/providers/" .. v)	AddCSLuaFile ("ginterface/providers/" .. v)end